// \\apnas\Distrib\8.3\Управление торговлей. Редакция 10.3
// D:\Сборка модулей интеграции\Редакция 10.3\

Перем ПутиКФайлам;
Перем ПараметрыЗапускаПриложения;
Перем ПараметрыОбновления;
Перем ДатаВыполненияСборки;
Перем ФайлыДляФтп;

Процедура СоздатьАрхивСписокИзменений()
	
	ИмяФайлаАрхива = ПутиКФайлам.КаталогОбновления + "Архивы для сайта\" + "ChangeList.zip";
	АрхивДляСайта = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Файлы для обновления\Управление торговлей. Версия "+ПараметрыОбновления.НомерВерсии+". Новое в версии.htm");
	АрхивДляСайта.Записать();
	ФайлыДляФтп.Добавить(ИмяФайлаАрхива);
	
КонецПроцедуры

Процедура СоздатьАрхивУстановки()
	
	ИмяФайлаАрхива = ПутиКФайлам.КаталогОбновления + "Архивы для сайта\" + "Setup.zip";
	АрхивДляСайта = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект поставки\1cv8.efd");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект поставки\ReadMe.txt");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект поставки\setup.exe");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект поставки\VerInfo.txt");
	АрхивДляСайта.Записать();
	ФайлыДляФтп.Добавить(ИмяФайлаАрхива);
	
КонецПроцедуры

Процедура СоздатьАрхивОбновления()
	
	ИмяФайлаАрхива = ПутиКФайлам.КаталогОбновления + "Архивы для сайта\" + "Update.zip";
	АрхивДляСайта = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\1cv8.efd");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\ReadMe.txt");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\setup.exe");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\UpdInfo.txt");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\VerInfo.txt");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Комплект обновления\Управление торговлей. Версия "+ПараметрыОбновления.НомерВерсии+". Новое в версии.htm");
	АрхивДляСайта.Записать();
	ФайлыДляФтп.Добавить(ИмяФайлаАрхива);
	
КонецПроцедуры

Процедура СоздатьРуководствоПользователя()
	
	ИмяФайлаАрхива = ПутиКФайлам.КаталогОбновления + "Архивы для сайта\" + "UserGuide.zip";
	АрхивДляСайта = Новый ЗаписьZipФайла(ИмяФайлаАрхива);
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Файлы для поставки\Описание конфигурации Управление торговлей, редакция 10.3.doc");
	АрхивДляСайта.Добавить(ПутиКФайлам.КаталогОбновления + "Файлы для обновления\Список изменений для конфигурации Управление торговлей, редакция 10.3.doc");
	АрхивДляСайта.Записать();
	ФайлыДляФтп.Добавить(ИмяФайлаАрхива);
	
КонецПроцедуры

Процедура СоздатьАрхивыДляФайла()
	
	ФайлыДляФтп = Новый Массив;
	СоздатьАрхивСписокИзменений();
	СоздатьАрхивУстановки();
	СоздатьАрхивОбновления();
	СоздатьРуководствоПользователя();
	ЗакачатьНаФтпСервер();
	
КонецПроцедуры

Процедура ЗакачатьНаФтпСервер()

	Сервер = "ftp://";
	Пользователь = "";
	Пароль = "";
	Каталог = "/8/8.2/10.3/Full/";
	КаталогВерсии = ПараметрыОбновления.КаталогРасш;
	ПутьCURL = "C:\cURL\";
	СтрокаЗапуска = ПутьCURL+"curl.exe -u " + Пользователь + ":" + Пароль + " -T {";
	Для Каждого ФайлДляФтп Из ФайлыДляФтп Цикл
		ФайлДляФтп = """" + СтрЗаменить(ФайлДляФтп,"\","/") + """";
		СтрокаЗапуска = СтрокаЗапуска + ФайлДляФтп + ",";
	КонецЦикла;
	СтрокаЗапуска = Лев(СтрокаЗапуска,СтрДлина(СтрокаЗапуска)-1) + "} ";
	СтрокаЗапуска = СтрокаЗапуска + Сервер + Каталог + КаталогВерсии + "/ --ftp-create-dirs";
	
	ЗапуститьПриложение(СтрокаЗапуска, , Истина);
	ПодождатьЗавершенияРаботыПроцесса();
	

КонецПроцедуры

Процедура ЗаписатьТекстВФайл(ПутьКФайлу, ТекстЗаписи)
	
	Текст = Новый ЗаписьТекста(ПутьКФайлу);
	Текст.Записать(ТекстЗаписи);
	Текст.Закрыть();
	
КонецПроцедуры

Процедура ДобавитьФайлКомплектаПоставки()
	
	ПутьКФайлуШаблона = ПутиКФайлам.КаталогШаблонов+"Комплект поставки.edf";
	ТекстФайла = ТексФайлаДляИзменения(ПутьКФайлуШаблона);
	ЗаменитьШаблонныеДанныеВТексте(ТекстФайла);
	ЗаписатьТекстВФайл(ПутиКФайлам.КаталогОбновления + "Комплект поставки.edf", ТекстФайла);
	
КонецПроцедуры

Процедура ДобавитьФайлapv8upd()
	
	ПутьКФайлуШаблона = ПутиКФайлам.КаталогШаблонов+"apv8upd.htm";
	ТекстФайла = ТексФайлаДляИзменения(ПутьКФайлуШаблона);
	ЗаменитьШаблонныеДанныеВТексте(ТекстФайла);
	ЗаписатьТекстВФайл(ПутиКФайлам.КаталогОбновления + "Файлы для обновления\apv8upd.htm", ТекстФайла);
	
КонецПроцедуры

Процедура ДобавитьФайлReadMe()
	
	ПутьКФайлуШаблона = ПутиКФайлам.КаталогШаблонов+"ReadMe.txt";
	ТекстФайла = ТексФайлаДляИзменения(ПутьКФайлуШаблона);
	ЗаменитьШаблонныеДанныеВТексте(ТекстФайла);
	МассивПутейФайла = КаталогиХраненияФайлов();
	Для Каждого КаталогХранения Из МассивПутейФайла Цикл
		ЗаписатьТекстВФайл(ПутиКФайлам.КаталогОбновления + КаталогХранения + "\ReadMe.txt", ТекстФайла);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьФайлUpdInfo()
	
	ПутьКФайлуШаблона = ПутиКФайлам.КаталогШаблонов+"UpdInfo.txt";
	ТекстФайла = ТексФайлаДляИзменения(ПутьКФайлуШаблона);
	ЗаменитьШаблонныеДанныеВТексте(ТекстФайла);
	МассивПутейФайла = Новый Массив;
	МассивПутейФайла.Добавить("Комплект обновления\");
	МассивПутейФайла.Добавить("Файлы для обновления\");
	Для Каждого КаталогХранения Из МассивПутейФайла Цикл
		ЗаписатьТекстВФайл(ПутиКФайлам.КаталогОбновления + КаталогХранения + "\UpdInfo.txt", ТекстФайла);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьФайлVerInfo()
	
	ПутьКФайлуШаблона = ПутиКФайлам.КаталогШаблонов+"VerInfo.txt";
	ТекстФайла = ТексФайлаДляИзменения(ПутьКФайлуШаблона);
	ЗаменитьШаблонныеДанныеВТексте(ТекстФайла);	
	МассивПутейФайла = КаталогиХраненияФайлов();
	Для Каждого КаталогХранения Из МассивПутейФайла Цикл
		ЗаписатьТекстВФайл(ПутиКФайлам.КаталогОбновления + КаталогХранения + "\VerInfo.txt", ТекстФайла);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаменитьШаблонныеДанныеВТексте(ТекстЗамены)
	
	МассивЗаменяемыхДанных = ЗаменяемыеДанныеФайлов();	
	Для Каждого ЭлементЗамены Из МассивЗаменяемыхДанных Цикл
		ТекстЗамены = СтрЗаменить(ТекстЗамены, "@" + ЭлементЗамены, ПараметрыОбновления[ЭлементЗамены]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьДанныеПоОбновлению()
	
	ПутьКФайлуОбновления = ПутиКФайлам.КаталогШаблонов+"ИнформацияДляОбновления.txt";
	ФайлНастроекОбновления = Новый ЧтениеТекста(ПутьКФайлуОбновления);
	СтрокаНастроек = ФайлНастроекОбновления.ПрочитатьСтроку();
	Пока СтрокаНастроек <> Неопределено Цикл
		СписокПараметра = ИзСтрокиВСписок(СтрокаНастроек, ":");
		ИмяПараметра = СписокПараметра[0].Значение;
		ЗначениеПараметра = СписокПараметра[1].Значение;
		ДобавитьПараметрОбновления(ИмяПараметра, ЗначениеПараметра);
		СтрокаНастроек = ФайлНастроекОбновления.ПрочитатьСтроку();
	КонецЦикла;
	
	ИмяПараметра = "КаталогВерсии";
	ЗначениеПараметра = ИмяКаталогаОбновления();
	ДобавитьПараметрОбновления(ИмяПараметра, ЗначениеПараметра);
	
	ИмяПараметра = "КаталогРасш";
	ДобавитьПараметрОбновления(ИмяПараметра, СтрЗаменить(ПараметрыОбновления.НомерВерсии,".","_"));
	
	ИмяПараметра = "КаталогОбновления";
	ДобавитьПараметрОбновления(ИмяПараметра, ПутиКФайлам.КаталогОбновлений+"\"+ПараметрыОбновления.КаталогВерсии);
	
КонецПроцедуры

Процедура ДобавитьПараметрОбновления(Ключ, Значение)
	
	Если ПараметрыОбновления  = Неопределено Тогда
		ПараметрыОбновления = Новый Структура;
	КонецЕсли;
	ПараметрыОбновления.Вставить(Ключ, Значение);
	
КонецПроцедуры

Процедура ИнициализироватьПути()

	ПутиКФайлам = Новый Структура;
	ПутиКФайлам.Вставить("КаталогОбновлений", "D:\Сборка модулей интеграции\Редакция 10.3");
	ПутиКФайлам.Вставить("ПутьКПлатформе1СПредприятия", """C:\Program Files (x86)\1cv82\common\1cestart.exe"" ");
	ПутиКФайлам.Вставить("КаталогДемоБазы", "D:\Bases\aplus_trade_10_3_update");
	ПутиКФайлам.Вставить("КаталогХранилища", """\\apc\Хранилище конфигураций\Управление торговлей. 8_2\""");
	ПутиКФайлам.Вставить("КаталогШаблонов", ПутиКФайлам.КаталогОбновлений+"\ФайлыДляОбновлений\");
	
КонецПроцедуры

Процедура ИнициализироватьПараметрыЗапуска()

	ПараметрыЗапускаПриложения = Новый Структура;
	ПараметрыЗапускаПриложения.Вставить("ЗапускПрограммы", "DESIGNER /F""" + ПутиКФайлам.КаталогДемоБазы + """ /N""Федоров (администратор)"" ");
	ПараметрыЗапускаПриложения.Вставить("ПодключенияКХранилищу", "/ConfigurationRepositoryF " + ПутиКФайлам.КаталогХранилища + " /ConfigurationRepositoryN ""Пользователь"" ");
	ПараметрыЗапускаПриложения.Вставить("Логирование", " /Out""" + ПутиКФайлам.ПутьКФайлуЛога + """ -NoTruncate");

КонецПроцедуры

Процедура ИнициализироватьПеременныеДляСборки()
	
	ИнициализироватьПути();
	ИнициализироватьДанныеПоОбновлению();
	
	ПутиКФайлам.Вставить("КаталогОбновления", ПутьККаталогуОбновления());
	ДополнитьСлешВПуть(ПутиКФайлам.КаталогОбновления);
	ПутиКФайлам.Вставить("ПутьКФайлуЛога", ПутиКФайлам.КаталогОбновления + "1СЛог.TXT");

	ИнициализироватьПараметрыЗапуска();
	
КонецПроцедуры

Процедура ДополнитьСлешВПуть(Каталог) Экспорт
	
	Если Прав(Каталог, 1) <> "\" Тогда
		Каталог = Каталог + "\";
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьСтруктуруКаталоговОбновления()
	
	СоздатьНовыйКаталог(ПутиКФайлам.КаталогОбновления);
	СоздатьНовыйКаталог(ПутьКВложенномуКаталогу("Архивы для сайта"));
	СоздатьНовыйКаталог(ПутьКВложенномуКаталогу("Комплект обновления"));
	СоздатьНовыйКаталог(ПутьКВложенномуКаталогу("Комплект поставки"));
	СоздатьНовыйКаталог(ПутьКВложенномуКаталогу("Файлы для обновления"));
	СоздатьНовыйКаталог(ПутьКВложенномуКаталогу("Файлы для поставки"));
	
КонецПроцедуры

Процедура ОбновитьДокументацию()
	
	КаталогДокументации = ПутиКФайлам.КаталогШаблонов;
	
	МассивДокументации = Новый Массив;
	МассивДокументации.Добавить("Управление торговлей. Версия "+ПараметрыОбновления.НомерВерсии+". Новое в версии.htm");
	МассивДокументации.Добавить("Список изменений для конфигурации Управление торговлей, редакция 10.3.doc");
	Для Каждого ИмяФайла Из МассивДокументации Цикл
		ПутьККопируемомуФайлу = КаталогДокументации + ИмяФайла;
		ПутьКНовомуФайлу = ПутиКФайлам.КаталогОбновления + "Файлы для обновления\" + ИмяФайла;
		КопироватьФайл(ПутьККопируемомуФайлу, ПутьКНовомуФайлу);
		ТекстСообщения = "Обновлен файл '" + ИмяФайла + "'.";
	КонецЦикла;
	
	ИмяФайла = "Описание конфигурации Управление торговлей, редакция 10.3.doc";
	ПутьККопируемомуФайлу = КаталогДокументации + ИмяФайла;
	ПутьКНовомуФайлу = ПутиКФайлам.КаталогОбновления + "Файлы для поставки\" + ИмяФайла;
	КопироватьФайл(ПутьККопируемомуФайлу, ПутьКНовомуФайлу);
	ТекстСообщения = "Обновлен файл '" + ИмяФайла + "'.";
	
	ИмяФайла = "Управление торговлей. Версия "+ПараметрыОбновления.НомерВерсии+". Новое в версии.htm";
	ПутьККопируемомуФайлу = КаталогДокументации + ИмяФайла;
	ПутьКНовомуФайлу = ПутиКФайлам.КаталогОбновления + "Комплект обновления\" + ИмяФайла;
	КопироватьФайл(ПутьККопируемомуФайлу, ПутьКНовомуФайлу);
	ТекстСообщения = "Обновлен файл '" + ИмяФайла + "'.";
	
КонецПроцедуры

Процедура ОбновитьШаблонныеФайлы()

	ДобавитьФайлКомплектаПоставки();
	ДобавитьФайлapv8upd();
	ДобавитьФайлReadMe();
	ДобавитьФайлUpdInfo();
	ДобавитьФайлVerInfo();

КонецПроцедуры

Процедура СкопироватьКаталогиДополнительныхФайлов()
	
	КаталогиКопирования = Новый Массив;
	КаталогиКопирования.Добавить("Components");
	КаталогиКопирования.Добавить("MapsScripts");
	КаталогиКопирования.Добавить("Maps");
	
	КаталогиКонечные = Новый Массив;
	КаталогиКонечные.Добавить("Файлы для обновления");
	КаталогиКонечные.Добавить("Файлы для поставки");
	
	Для Каждого КаталогКопирования Из КаталогиКопирования Цикл
		КаталогИсходный = ПутиКФайлам.КаталогШаблонов + КаталогКопирования;
		Для Каждого КаталогКонечный Из КаталогиКонечные Цикл
			КаталогКонечный = ПутиКФайлам.КаталогОбновления + КаталогКонечный + "\" + КаталогКопирования;
			СтрокаПриложения = "xcopy """ + КаталогИсходный + """ """ + КаталогКонечный + """ /I /H /Y /C /R /S";
			ЗапуститьПриложение(СтрокаПриложения, , Истина);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьКонфигурациюДемонстрационнойБазы()
	
	ПараметрОбновленияКонфигурацииИзХранилища = " /ConfigurationRepositoryUpdateCfg";	
	КлючиЗапускаПриложения = ОбщиеПараметрыЗапускаПриложенияСборок();
	КлючиЗапускаПриложения.Добавить(ПараметрОбновленияКонфигурацииИзХранилища);
	
	Результат = 0;	
	ЗапуститьПриложение(СтрокаЗапускаПриложения(КлючиЗапускаПриложения), , Истина, Результат);
	ПодождатьЗавершенияРаботыПроцесса();
	ВывестиСообщениеПользователю("Конфигурация обновлена из хранилища.");
	
КонецПроцедуры

Процедура СоздатьФайлыКонфигурацииИОбновления(Отказ)
	
	КаталогФайлаПоставки 	= ПутиКФайлам.КаталогОбновления + ПараметрыОбновления.КаталогРасш;
	КаталогФайлаОбновления 	= ПутиКФайлам.КаталогОбновления + ПараметрыОбновления.КаталогРасш;
	
	ПараметрыФормированияФайловПоставки = "/CreateDistributionFiles ";
	ИмяФайлаКонфигурации = "\1Cv8.cf";
	ИмяФайлаОбновления = "\1Cv8.cfu";
	КаталогиКонфигурацийОбновления = КаталогиОбновляемыхКонфигураций();
	КомандаОбновленияКонфигураций = " -f ";
	ПараметрОбновляемыхКонфигураций = "";
	Для Каждого КаталогКонфигурации Из КаталогиКонфигурацийОбновления Цикл		
		ПутьКФайлуКонфигурации = КаталогКонфигурации + ИмяФайлаКонфигурации;
		Если ФайлСуществует(ПутьКФайлуКонфигурации) Тогда 
			ПараметрОбновляемыхКонфигураций = ПараметрОбновляемыхКонфигураций + КомандаОбновленияКонфигураций + """" + ПутьКФайлуКонфигурации + """";
		КонецЕсли;
	КонецЦикла;
	
	ПараметрСозданияДистрибутива = "-cffile """ + КаталогФайлаПоставки + ИмяФайлаКонфигурации + """ ";
	ПараметрСозданияОбновления = "-cfufile """ + КаталогФайлаОбновления + ИмяФайлаОбновления + """ ";
	
	КлючиЗапускаПриложения = ОбщиеПараметрыЗапускаПриложенияСборок();
	КлючиЗапускаПриложения.Добавить(ПараметрыФормированияФайловПоставки);
	КлючиЗапускаПриложения.Добавить(ПараметрСозданияДистрибутива);
	КлючиЗапускаПриложения.Добавить(ПараметрСозданияОбновления);
	КлючиЗапускаПриложения.Добавить(ПараметрОбновляемыхКонфигураций);
	
	Результат = 0;
	ЗапуститьПриложение(СтрокаЗапускаПриложения(КлючиЗапускаПриложения), , Истина, Результат);
	
	ПодождатьЗавершенияРаботыПроцесса();
	Если ФайлСуществует(КаталогФайлаПоставки + ИмяФайлаКонфигурации) Тогда
		ВывестиСообщениеПользователю("Файл конфигурации создан.");
	Иначе
		ВывестиСообщениеПользователю("Не удалось создать файл конфигурации.");
		Отказ = Истина;
	КонецЕсли;
	
	Если ФайлСуществует(КаталогФайлаОбновления + ИмяФайлаОбновления) Тогда
		СтрокаПриложения = "xcopy """ + КаталогФайлаОбновления + ИмяФайлаОбновления + """ """ + ПутиКФайлам.КаталогОбновления + "Файлы для обновления"" /I /H /Y /C /R";
		ЗапуститьПриложение(СтрокаПриложения, , Истина);
		ВывестиСообщениеПользователю("Файл обновления создан.");
	Иначе
		ВывестиСообщениеПользователю("Не удалось создать файл обновления.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьКомплектПоставки(Отказ)
	
	ФайлОписанияПоставки = ПутиКФайлам.КаталогОбновления + "\Комплект поставки.edf";
	КаталогКомплектаПоставки = """" + ПутиКФайлам.КаталогОбновления + "\Комплект поставки""";
	КлючФормированияКомплектовПоставки = " /CreateDistributive ";
	ПараметрФайлаОписания = " -File """ + ФайлОписанияПоставки + """";
	ПараметрТипаПоставки = " -Option ""Полный"" -MakeSetup";
	ПараметрыФормированияКомплектовПоставки = КлючФормированияКомплектовПоставки + КаталогКомплектаПоставки + ПараметрФайлаОписания + ПараметрТипаПоставки;
	
	КлючиЗапускаПриложения = ОбщиеПараметрыЗапускаПриложенияСборок();
	КлючиЗапускаПриложения.Добавить(ПараметрыФормированияКомплектовПоставки);
	
	Результат = 0;
	ЗапуститьПриложение(СтрокаЗапускаПриложения(КлючиЗапускаПриложения), , Истина, Результат);
	
	ПодождатьЗавершенияРаботыПроцесса();
	ФайлПоставки = ПутиКФайлам.КаталогОбновления + "\Комплект поставки\setup.exe";
	Если ФайлСуществует(ФайлПоставки) Тогда
		ВывестиСообщениеПользователю("Создали комплект поставки.");
	Иначе
		ВывестиСообщениеПользователю("Не удалось сформировать комплект поставки.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьКомплектОбновления(Отказ)
	
	ФайлОписанияПоставки = ПутиКФайлам.КаталогОбновления + "\" + "Комплект поставки.edf";
	КаталогКомплектаОбновления = """" + ПутиКФайлам.КаталогОбновления + "\" + "Комплект обновления""";
	КлючФормированияКомплектовПоставки = " /CreateDistributive ";
	ПараметрФайлаОписания = " -File """ + ФайлОписанияПоставки + """";
	ПараметрТипаПоставки = " -Option ""Комплект обновления"" -MakeSetup";
	ПараметрыФормированияКомплектовПоставки = КлючФормированияКомплектовПоставки + КаталогКомплектаОбновления + ПараметрФайлаОписания + ПараметрТипаПоставки;
	
	КлючиЗапускаПриложения = ОбщиеПараметрыЗапускаПриложенияСборок();
	КлючиЗапускаПриложения.Добавить(ПараметрыФормированияКомплектовПоставки);
	
	Результат = 0;
	ЗапуститьПриложение(СтрокаЗапускаПриложения(КлючиЗапускаПриложения), , Истина, Результат);
	
	ПодождатьЗавершенияРаботыПроцесса();
	ФайлПоставки = ПутиКФайлам.КаталогОбновления + "Комплект обновления\setup.exe";
	Если ФайлСуществует(ФайлПоставки) Тогда
		ВывестиСообщениеПользователю("Создали комплект обновления.");
	Иначе
		ВывестиСообщениеПользователю("Не удалось сформировать комплект обновления.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СборкаОбновления_10_3_Под_8_2()
	
	ИнициализироватьПеременныеДляСборки();
	СоздатьСтруктуруКаталоговОбновления();
	СоздатьНовыйТекстовыйФайл(ПутиКФайлам.ПутьКФайлуЛога);
	ОбновитьДокументацию();
	ОбновитьШаблонныеФайлы();
	СкопироватьКаталогиДополнительныхФайлов();
	
	Отказ = Ложь;

	//ОбновитьКонфигурациюДемонстрационнойБазы();	
	
	СоздатьФайлыКонфигурацииИОбновления(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьКомплектПоставки(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьКомплектОбновления(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьАрхивыДляФайла();	
	ВывестиСообщениеПользователю("Формирование поставок успешно завершено.");
	
КонецПроцедуры

Процедура СоздатьНовыйКаталог(ПутьККаталогу)
	
	Если Не ФайлСуществует(ПутьККаталогу) Тогда
		СоздатьКаталог(ПутьККаталогу);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьНовыйТекстовыйФайл(ПутьКФайлу)

	Если Не ФайлСуществует(ПутьКФайлу) Тогда
		НовыйФайлТекстовый = Новый ЗаписьТекста(ПутьКФайлу, КодировкаТекста.ANSI);
		НовыйФайлТекстовый.Закрыть();
	КонецЕсли;

КонецПроцедуры

Процедура ВывестиСообщениеПользователю(ТекстСообщения)
	
	Попытка
		Если ФайлСуществует(ПутиКФайлам.ПутьКФайлуЛога) Тогда
			ТекстЛога = ТексФайлаДляИзменения(ПутиКФайлам.ПутьКФайлуЛога);
			ТекстЛога = ТекстЛога + Символы.ПС + ТекстСообщения;
			ЗаписатьТекстВФайл(ПутиКФайлам.ПутьКФайлуЛога, ТекстЛога);
		КонецЕсли;
	Исключение
	КонецПопытки
	
КонецПроцедуры

Процедура ПодождатьЗавершенияРаботыПроцесса()
	
	ВремяПервойПроверки = ТекущаяДата() + 10;
	ПодождатьДоСледующейПроверки(ВремяПервойПроверки);
	
	КонфигураторЕщеЗапущен = Истина;
	ПутьКФайлуРаботающейБазыДанных = ПутиКФайлам.КаталогДемоБазы + "\" + "1Cv8.cgr";
	Пока КонфигураторЕщеЗапущен Цикл
		Если Не ФайлСуществует(ПутьКФайлуРаботающейБазыДанных) Тогда
			КонфигураторЕщеЗапущен = Ложь;
			ВремяПервойПроверки = ТекущаяДата() + 10;
			ПодождатьДоСледующейПроверки(ВремяПервойПроверки);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодождатьДоСледующейПроверки(ВремяПроверки)
	
	Пока ТекущаяДата() < ВремяПроверки Цикл
	КонецЦикла;
	
КонецПроцедуры

Функция КаталогОбновления(КаталогОбновлений)

	КаталогиФайловОбновления = НайтиФайлы(КаталогОбновлений, "*.*", Ложь);
	НовыйКаталогОбновления = Неопределено;
	ДатаНовогоКаталога = Дата("00010101");
	Для Каждого ФайлКаталогаОбновлений Из КаталогиФайловОбновления Цикл
		ДатаИзменения = ФайлКаталогаОбновлений.ПолучитьВремяИзменения();
		Если ДатаИзменения > ДатаНовогоКаталога Тогда
			НовыйКаталогОбновления = ФайлКаталогаОбновлений;
			ДатаНовогоКаталога = ДатаИзменения;
		КонецЕсли;
	КонецЦикла;

	Возврат НовыйКаталогОбновления;
КонецФункции

Функция КаталогиОбновляемыхКонфигураций()

	КаталогиКонфигураций = Новый Массив;
	Если СтрНайти(ПараметрыОбновления.ПутиКВерсиямОбновления,";") <> 0 Тогда
	
		СтрокаРазбора = ПараметрыОбновления.ПутиКВерсиямОбновления;
		Поз = 0; Поз = СтрНайти(СтрокаРазбора,";");
		Пока Поз <> 0 Цикл
			КаталогиКонфигураций.Добавить(Лев(СтрокаРазбора,Поз-1));
			СтрокаРазбора = Сред(СтрокаРазбора,Поз+1);
			Поз = СтрНайти(СтрокаРазбора,";");
		КонецЦикла;
		КаталогиКонфигураций.Добавить(СтрокаРазбора);
	
	Иначе
		КаталогиКонфигураций.Добавить(ПараметрыОбновления.ПутиКВерсиямОбновления);
	КонецЕсли; 
	
	Возврат КаталогиКонфигураций;
КонецФункции

Функция ПутьККаталогуОбновления()
	
	ПутьККаталогуТекущегоОбновления = "";
	ПутьККаталогуОбновлений = ПутиКФайлам.КаталогОбновлений;
	ИмяОбновления = ИмяКаталогаОбновления();
	ДополнитьСлешВПуть(ПутиКФайлам.КаталогОбновлений);
	ПутьККаталогуТекущегоОбновления = ПутиКФайлам.КаталогОбновлений + ИмяОбновления;
	ДополнитьСлешВПуть(ПутьККаталогуТекущегоОбновления);
	
	Возврат ПутьККаталогуТекущегоОбновления;
КонецФункции

Функция ИмяКаталогаОбновления()
	
	ИмяКаталога = СтрЗаменить(ПараметрыОбновления.НомерВерсии, ".", "_") + " (" + Формат(ДатаВыполненияСборки, "ДФ=dd.MM.yy") + ")";
	
	Возврат ИмяКаталога;
КонецФункции

Функция ПутьКВложенномуКаталогу(ИмяКаталога)
	
	ПутьККаталогуТекущегоОбновления = "";
	ДополнитьСлешВПуть(ПутиКФайлам.КаталогОбновления);
	ПутьККаталогуТекущегоОбновления = ПутиКФайлам.КаталогОбновления + ИмяКаталога;
	
	Возврат ПутьККаталогуТекущегоОбновления;
КонецФункции

Функция ОбщиеПараметрыЗапускаПриложенияСборок()

	КлючиЗапускаПриложения = Новый Массив;
	КлючиЗапускаПриложения.Добавить(ПутиКФайлам.ПутьКПлатформе1СПредприятия);
	КлючиЗапускаПриложения.Добавить(ПараметрыЗапускаПриложения.ЗапускПрограммы);
	КлючиЗапускаПриложения.Добавить(ПараметрыЗапускаПриложения.ПодключенияКХранилищу);
	КлючиЗапускаПриложения.Добавить(ПараметрыЗапускаПриложения.Логирование);
	
	Возврат КлючиЗапускаПриложения;
КонецФункции

Функция КаталогиХраненияФайлов()
	
	МассивПутейФайла = Новый Массив;
	МассивПутейФайла.Добавить("Комплект обновления\");
	МассивПутейФайла.Добавить("Комплект поставки\");
	МассивПутейФайла.Добавить("Файлы для обновления\");
	МассивПутейФайла.Добавить("Файлы для поставки\");
	
	Возврат МассивПутейФайла;
КонецФункции

Функция СтрокаЗапускаПриложения(МассивПараметровЗапуска)
	
	СтрокаЗапуска = "";
	Для Каждого ПараметрЗапускаПриложения Из МассивПараметровЗапуска Цикл
		СтрокаЗапуска = СтрокаЗапуска + ПараметрЗапускаПриложения;
	КонецЦикла;
	
	Возврат СтрокаЗапуска;
КонецФункции

Функция ИзСтрокиВСписок(прСтрока, прРаздел = ",") Экспорт
	Перем лкВозврат, лкПоз;
	
	лкВозврат = Новый СписокЗначений;
	
	Поз = 0; Поз = СтрНайти(прСтрока,прРаздел);
	Если Поз <>  0 Тогда
		лкВозврат.Добавить(Лев(прСтрока,Поз-1));
		лкВозврат.Добавить(Сред(прСтрока,Поз+1));
	КонецЕсли;
	
	//Пока Не(ПустаяСтрока(прСтрока)) Цикл
	//	лкПоз = Найти(прСтрока,прРаздел);
	//	Если (лкПоз > 0) Тогда
	//		лкВозврат.Добавить(Лев(прСтрока,лкПоз - 1));
	//		прСтрока = Сред(прСтрока,лкПоз + СтрДлина(прРаздел));
	//	Иначе
	//		лкВозврат.Добавить(прСтрока);
	//		прСтрока="";
	//	КонецЕсли;
	//КонецЦикла;

	Возврат(лкВозврат);
	
КонецФункции

Функция ТексФайлаДляИзменения(ПутьКФайлуЧтения)
	
	ФайлЧтения = Новый ЧтениеТекста(ПутьКФайлуЧтения);
	ТекстФайла = ФайлЧтения.Прочитать();
	
	Возврат ТекстФайла;
	
КонецФункции

Функция ЗаменяемыеДанныеФайлов()
	
	МассивЗаменяемыхДанных = Новый Массив;
	МассивЗаменяемыхДанных.Добавить("НомерВерсии");
	МассивЗаменяемыхДанных.Добавить("ОбновляемыеВерсии");
	МассивЗаменяемыхДанных.Добавить("ДатаОбновления");
	МассивЗаменяемыхДанных.Добавить("КаталогВерсии");
	МассивЗаменяемыхДанных.Добавить("КаталогОбновления");
	МассивЗаменяемыхДанных.Добавить("КаталогРасш");
	
	Возврат МассивЗаменяемыхДанных;
	
КонецФункции

Функция ФайлСуществует(ПолныйПутьКФайлу)
	
	Существует = Ложь;
	ФайлПроверки = Новый Файл(ПолныйПутьКФайлу);
	Если ФайлПроверки.Существует() Тогда 
		Существует = Истина;
	КонецЕсли;
	
	Возврат Существует;
	
КонецФункции

ВывестиСообщениеПользователю("Запуск скрипта...");
ДатаВыполненияСборки = ТекущаяДата();
СборкаОбновления_10_3_Под_8_2();